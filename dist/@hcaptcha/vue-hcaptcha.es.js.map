{"version":3,"file":"vue-hcaptcha.es.js","sources":["../../src/hcaptcha-script.js","../../plugin-vue:export-helper","../../src/hcaptcha.vue","../../node_modules/mitt/dist/mitt.mjs","../../src/main.js"],"sourcesContent":["/**\n * Used to prevent loading api.js multiple times\n * @type {string}\n */\nexport const SCRIPT_ID = 'hcaptcha-api-script-id';\n\nconst HCAPTCHA_LOAD_FN_NAME = '_hcaptchaOnLoad';\n\nlet resolveFn;\nlet rejectFn;\nconst promise = new Promise((resolve, reject) => {\n    resolveFn = resolve;\n    rejectFn = reject;\n});\n\n/**\n * Async hcaptcha api.js loader.\n *\n * It makes sure `apiEndpoint` is loaded ONCE on the page despite calling this multiple times.\n *\n * Usage:\n * 1. import hcaptchaScript from './hcaptcha-script';\n * 2. when web component is mounted do:\n *      loadApiEndpointIfNotAlready('apiEndpoint', ...)\n *        .then(() => console.log('hcaptcha is loaded so it is safe to be used'))\n *        .catch((err) => console.error('failed to load the hcaptcha', err));\n *\n * @param config\n * @returns {Promise<void>}\n */\nexport function loadApiEndpointIfNotAlready(config) {\n    if (window.hcaptcha) {\n        // api.js is already present\n        resolveFn();\n        return promise;\n    }\n    if (document.getElementById(SCRIPT_ID)) {\n        // api.js was already requested\n        return promise;\n    }\n    // request api.js once\n    window[HCAPTCHA_LOAD_FN_NAME] = resolveFn;\n    const scriptSrc = getScriptSrc(config);\n    const script = document.createElement('script');\n    script.id = SCRIPT_ID;\n    script.src = scriptSrc;\n    script.async = true;\n    script.defer = true;\n    script.onerror = (event) => {\n        // eslint-disable-next-line no-console\n        console.error('Failed to load api: ' + scriptSrc, event);\n        rejectFn('Failed to load api.js');\n    };\n    document.head.appendChild(script);\n    return promise;\n}\n\nexport function getScriptSrc(config) {\n    let scriptSrc = config.apiEndpoint;\n    scriptSrc = addQueryParamIfDefined(scriptSrc, 'render', 'explicit');\n    scriptSrc = addQueryParamIfDefined(scriptSrc, 'onload', HCAPTCHA_LOAD_FN_NAME);\n    scriptSrc = addQueryParamIfDefined(scriptSrc, 'recaptchacompat', config.reCaptchaCompat === false ? 'off' : null);\n    scriptSrc = addQueryParamIfDefined(scriptSrc, 'hl', config.language);\n    scriptSrc = addQueryParamIfDefined(scriptSrc, 'sentry', config.sentry);\n    scriptSrc = addQueryParamIfDefined(scriptSrc, 'endpoint', config.endpoint);\n    scriptSrc = addQueryParamIfDefined(scriptSrc, 'assethost', config.assethost);\n    scriptSrc = addQueryParamIfDefined(scriptSrc, 'imghost', config.imghost);\n    scriptSrc = addQueryParamIfDefined(scriptSrc, 'reportapi', config.reportapi);\n    return scriptSrc;\n}\n\nexport function addQueryParamIfDefined(url, queryName, queryValue) {\n    if (queryValue !== undefined && queryValue !== null) {\n        const link = url.includes('?') ? '&' : '?';\n        return url + link + queryName + '=' + encodeURIComponent(queryValue);\n    }\n    return url;\n}\n","\nexport default (sfc, props) => {\n  for (const [key, val] of props) {\n    sfc[key] = val\n  }\n  return sfc\n}\n","<template>\n  <div id=\"hcap-script\" />\n</template>\n\n<script>\nimport {defineComponent, reactive, toRefs} from \"vue\";\nimport {loadApiEndpointIfNotAlready} from \"./hcaptcha-script\";\nimport mitt from \"mitt\";\n\nexport default defineComponent({\n    name: \"VueHcaptcha\",\n    props: {\n        sitekey: {\n            type: String,\n            required: true,\n        },\n        theme: {\n            type: String,\n            default: undefined,\n        },\n        size: {\n            type: String,\n            default: undefined,\n        },\n        tabindex: {\n            type: String,\n            default: undefined,\n        },\n        language: {\n            type: String,\n            default: undefined,\n        },\n        reCaptchaCompat: {\n            type: Boolean,\n            default: true,\n        },\n        challengeContainer: {\n            type: String,\n            default: undefined,\n        },\n        rqdata: {\n            type: String,\n            default: undefined,\n        },\n        sentry: {\n            type: Boolean,\n            default: true,\n        },\n        apiEndpoint: {\n            type: String,\n            default: \"https://hcaptcha.com/1/api.js\",\n        },\n        endpoint: {\n            type: String,\n            default: undefined,\n        },\n        reportapi: {\n            type: String,\n            default: undefined,\n        },\n        assethost: {\n            type: String,\n            default: undefined,\n        },\n        imghost: {\n            type: String,\n            default: undefined,\n        },\n    },\n    setup() {\n        const data = reactive({\n            widgetId: null,\n            hcaptcha: null,\n            emitter: mitt(),\n        });\n        return {\n            ...toRefs(data),\n        };\n    },\n    mounted() {\n        return loadApiEndpointIfNotAlready(this.$props)\n            .then(this.onApiLoaded)\n            .catch(this.onError);\n    },\n    beforeUnmount() {\n        if (this.widgetId) {\n            this.hcaptcha.reset(this.widgetId);\n            this.hcaptcha.remove(this.widgetId);\n        }\n    },\n    methods: {\n        onApiLoaded() {\n            this.hcaptcha = window.hcaptcha;\n            const opt = {\n                sitekey: this.sitekey,\n                theme: this.theme,\n                size: this.size,\n                tabindex: this.tabindex,\n                callback: this.onVerify,\n                \"expired-callback\": this.onExpired,\n                \"chalexpired-callback\": this.onChallengeExpired,\n                \"error-callback\": this.onError,\n                \"open-callback\": this.onOpen,\n                \"close-callback\": this.onClose,\n            };\n            if (this.challengeContainer) {\n                opt[\"challenge-container\"] = this.challengeContainer;\n            }\n            this.widgetId = this.hcaptcha.render(this.$el, opt);\n            if (this.rqdata) {\n                this.hcaptcha.setData(this.widgetId, {rqdata: this.rqdata});\n            }\n            this.onRendered();\n        },\n        execute() {\n            if (this.widgetId) {\n                this.hcaptcha.execute(this.widgetId);\n                this.onExecuted();\n            } else {\n                // execute after el is rendered\n                this.emitter.on(\"rendered\", this.execute);\n            }\n        },\n        reset() {\n            if (this.widgetId) {\n                this.hcaptcha.reset(this.widgetId);\n                this.onReset();\n            } else {\n                this.$emit(\n                    \"error\",\n                    \"Element is not rendered yet and thus cannot reset it. Wait for `rendered` event to safely call reset.\"\n                );\n            }\n        },\n        onRendered() {\n            this.$emit(\"rendered\");\n            this.emitter.emit(\"rendered\", \"\");\n        },\n        onExecuted() {\n            this.$emit(\"executed\");\n        },\n        onReset() {\n            this.$emit(\"reset\");\n        },\n        onError(e) {\n            this.$emit(\"error\", e);\n            this.reset();\n        },\n        onVerify() {\n            const token = this.hcaptcha.getResponse(this.widgetId);\n            const eKey = this.hcaptcha.getRespKey(this.widgetId);\n            this.$emit(\"verify\", token, eKey);\n        },\n        onExpired() {\n            this.$emit(\"expired\");\n        },\n        onChallengeExpired() {\n            this.$emit(\"challengeExpired\");\n        },\n        onOpen() {\n            this.$emit(\"opened\");\n        },\n        onClose() {\n            this.$emit(\"closed\");\n        },\n    },\n});\n</script>\n","export default function(n){return{all:n=n||new Map,on:function(t,e){var i=n.get(t);i?i.push(e):n.set(t,[e])},off:function(t,e){var i=n.get(t);i&&(e?i.splice(i.indexOf(e)>>>0,1):n.set(t,[]))},emit:function(t,e){var i=n.get(t);i&&i.slice().map(function(n){n(e)}),(i=n.get(\"*\"))&&i.slice().map(function(n){n(t,e)})}}}\n//# sourceMappingURL=mitt.mjs.map\n","import VueHcaptcha from './hcaptcha.vue';\n\n// Declare install function executed by Vue.use()\nexport function install(Vue) {\n    if (install.installed) {\n        return;\n    }\n    install.installed = true;\n    // Keep this for backwards compatibility\n    Vue.component('Vuehcaptcha', VueHcaptcha);\n    // Register camelcase which allows component with dash in it: <vue-hcaptcha />\n    Vue.component('VueHcaptcha', VueHcaptcha);\n}\n\n// Create module definition for Vue.use()\nconst plugin = {\n    install\n};\n\n// Auto-install when vue is found (eg. in browser via <script> tag)\nlet GlobalVue = null;\nif (typeof window !== 'undefined') {\n    GlobalVue = window.Vue;\n} else if (typeof global !== 'undefined') {\n    GlobalVue = global.Vue;\n}\nif (GlobalVue) {\n    GlobalVue.use(plugin);\n}\n\n// To allow use as module (npm/webpack/etc.) export component\nexport default VueHcaptcha;\n"],"names":["resolveFn","rejectFn","promise","Promise","resolve","reject","config","window","hcaptcha","document","getElementById","scriptSrc","apiEndpoint","addQueryParamIfDefined","reCaptchaCompat","language","sentry","endpoint","assethost","imghost","reportapi","getScriptSrc","script","createElement","id","src","async","defer","onerror","event","error","head","appendChild","url","queryName","queryValue","link","includes","encodeURIComponent","sfc","props","key","val","defineComponent","name","sitekey","type","String","required","theme","default","size","tabindex","Boolean","challengeContainer","rqdata","setup","data","reactive","widgetId","emitter","all","n","Map","on","t","e","i","get","push","set","off","splice","indexOf","emit","slice","map","n2","__spreadValues","toRefs","mounted","loadApiEndpointIfNotAlready","this","$props","then","onApiLoaded","catch","onError","beforeUnmount","reset","remove","methods","opt","callback","onVerify","onExpired","onChallengeExpired","onOpen","onClose","render","$el","setData","onRendered","execute","onExecuted","onReset","$emit","token","getResponse","eKey","getRespKey","$data","Vue","install","installed","component","VueHcaptcha","plugin","GlobalVue","global","use"],"mappings":"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"}