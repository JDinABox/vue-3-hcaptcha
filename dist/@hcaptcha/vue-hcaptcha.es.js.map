{"version":3,"file":"vue-hcaptcha.es.js","sources":["../../src/hcaptcha-script.js","../../plugin-vue:export-helper","../../src/hcaptcha.vue","../../src/main.js"],"sourcesContent":["/**\n * Used to prevent loading api.js multiple times\n * @type {string}\n */\nexport const SCRIPT_ID = 'hcaptcha-api-script-id';\n\nconst HCAPTCHA_LOAD_FN_NAME = '_hcaptchaOnLoad';\n\nlet resolveFn;\nlet rejectFn;\nconst promise = new Promise((resolve, reject) => {\n    resolveFn = resolve;\n    rejectFn = reject;\n});\n\n/**\n * Async hcaptcha api.js loader.\n *\n * It makes sure `apiEndpoint` is loaded ONCE on the page despite calling this multiple times.\n *\n * Usage:\n * 1. import hcaptchaScript from './hcaptcha-script';\n * 2. when web component is mounted do:\n *      loadApiEndpointIfNotAlready('apiEndpoint', ...)\n *        .then(() => console.log('hcaptcha is loaded so it is safe to be used'))\n *        .catch((err) => console.error('failed to load the hcaptcha', err));\n *\n * @param config\n * @returns {Promise<void>}\n */\nexport function loadApiEndpointIfNotAlready(config) {\n    if (window.hcaptcha) {\n        // api.js is already present\n        resolveFn();\n        return promise;\n    }\n    if (document.getElementById(SCRIPT_ID)) {\n        // api.js was already requested\n        return promise;\n    }\n    // request api.js once\n    window[HCAPTCHA_LOAD_FN_NAME] = resolveFn;\n    const scriptSrc = getScriptSrc(config);\n    const script = document.createElement('script');\n    script.id = SCRIPT_ID;\n    script.src = scriptSrc;\n    script.async = true;\n    script.defer = true;\n    script.onerror = (event) => {\n        // eslint-disable-next-line no-console\n        console.error('Failed to load api: ' + scriptSrc, event);\n        rejectFn('Failed to load api.js');\n    };\n    document.head.appendChild(script);\n    return promise;\n}\n\nexport function getScriptSrc(config) {\n    let scriptSrc = config.apiEndpoint;\n    scriptSrc = addQueryParamIfDefined(scriptSrc, 'render', 'explicit');\n    scriptSrc = addQueryParamIfDefined(scriptSrc, 'onload', HCAPTCHA_LOAD_FN_NAME);\n    scriptSrc = addQueryParamIfDefined(scriptSrc, 'recaptchacompat', config.reCaptchaCompat === false ? 'off' : null);\n    scriptSrc = addQueryParamIfDefined(scriptSrc, 'hl', config.language);\n    scriptSrc = addQueryParamIfDefined(scriptSrc, 'sentry', config.sentry);\n    scriptSrc = addQueryParamIfDefined(scriptSrc, 'endpoint', config.endpoint);\n    scriptSrc = addQueryParamIfDefined(scriptSrc, 'assethost', config.assethost);\n    scriptSrc = addQueryParamIfDefined(scriptSrc, 'imghost', config.imghost);\n    scriptSrc = addQueryParamIfDefined(scriptSrc, 'reportapi', config.reportapi);\n    return scriptSrc;\n}\n\nexport function addQueryParamIfDefined(url, queryName, queryValue) {\n    if (queryValue !== undefined && queryValue !== null) {\n        const link = url.includes('?') ? '&' : '?';\n        return url + link + queryName + '=' + encodeURIComponent(queryValue);\n    }\n    return url;\n}\n","\nexport default (sfc, props) => {\n  for (const [key, val] of props) {\n    sfc[key] = val\n  }\n  return sfc\n}\n","<template>\n  <div id=\"hcap-script\" />\n</template>\n\n<script>\nimport { defineComponent } from \"vue-demi\";\nimport {loadApiEndpointIfNotAlready} from './hcaptcha-script';\n\nexport default defineComponent({\n    name: 'VueHcaptcha',\n    props: {\n        sitekey: {\n            type: String,\n            required: true\n        },\n        theme: {\n            type: String,\n            default: undefined\n        },\n        size: {\n            type: String,\n            default: undefined\n        },\n        tabindex: {\n            type: String,\n            default: undefined\n        },\n        language: {\n            type: String,\n            default: undefined\n        },\n        reCaptchaCompat: {\n            type: Boolean,\n            default: true\n        },\n        challengeContainer: {\n            type: String,\n            default: undefined\n        },\n        rqdata: {\n            type: String,\n            default: undefined\n        },\n        sentry: {\n            type: Boolean,\n            default: true\n        },\n        apiEndpoint: {\n            type: String,\n            default: 'https://hcaptcha.com/1/api.js'\n        },\n        endpoint: {\n            type: String,\n            default: undefined\n        },\n        reportapi: {\n            type: String,\n            default: undefined\n        },\n        assethost: {\n            type: String,\n            default: undefined\n        },\n        imghost: {\n            type: String,\n            default: undefined\n        },\n    },\n    data: () => {\n        return {\n            widgetId: null,\n            hcaptcha: null\n        };\n    },\n    mounted() {\n        return loadApiEndpointIfNotAlready(this.$props).then(this.onApiLoaded).catch(this.onError);\n    },\n    unmounted() {\n        if (this.widgetId) {\n            this.hcaptcha.then(() => {\n                this.hcaptcha.reset(this.widgetId);\n                this.hcaptcha.remove(this.widgetId);\n            });\n        }\n    },\n    methods: {\n        onApiLoaded() {\n            this.hcaptcha = window.hcaptcha;\n            const opt = {\n                sitekey: this.sitekey,\n                theme: this.theme,\n                size: this.size,\n                tabindex: this.tabindex,\n                'callback': this.onVerify,\n                'expired-callback': this.onExpired,\n                'chalexpired-callback': this.onChallengeExpired,\n                'error-callback': this.onError,\n                'open-callback': this.onOpen,\n                'close-callback': this.onClose\n            };\n            if (this.challengeContainer) {\n                opt['challenge-container'] = this.challengeContainer;\n            }\n            this.widgetId = this.hcaptcha.render(this.$el, opt);\n            if (this.rqdata) {\n                this.hcaptcha.setData(this.widgetId, {rqdata: this.rqdata});\n            }\n            this.onRendered();\n        },\n        execute() {\n            if (this.widgetId) {\n                this.hcaptcha.execute(this.widgetId);\n                this.onExecuted();\n            } else {\n                // execute after el is rendered\n                this.$on('rendered', this.execute);\n            }\n        },\n        reset() {\n            if (this.widgetId) {\n                this.hcaptcha.reset(this.widgetId);\n                this.onReset();\n            } else {\n                this.$emit('error', 'Element is not rendered yet and thus cannot reset it. Wait for `rendered` event to safely call reset.');\n            }\n        },\n        onRendered() {\n            this.$emit('rendered');\n        },\n        onExecuted() {\n            this.$emit('executed');\n        },\n        onReset() {\n            this.$emit('reset');\n        },\n        onError(e) {\n            this.$emit('error', e);\n            this.reset();\n        },\n        onVerify() {\n            const token = this.hcaptcha.getResponse(this.widgetId);\n            const eKey = this.hcaptcha.getRespKey(this.widgetId);\n            this.$emit('verify', token, eKey);\n        },\n        onExpired() {\n            this.$emit('expired');\n        },\n        onChallengeExpired() {\n            this.$emit('challengeExpired');\n        },\n        onOpen() {\n            this.$emit('opened');\n        },\n        onClose() {\n            this.$emit('closed');\n        }\n    }\n});\n</script>\n","import VueHcaptcha from './hcaptcha.vue';\n\n// Declare install function executed by Vue.use()\nexport function install(Vue) {\n    if (install.installed) {\n        return;\n    }\n    install.installed = true;\n    // Keep this for backwards compatibility\n    Vue.component('vuehcaptcha', VueHcaptcha);\n    // Register camelcase which allows component with dash in it: <vue-hcaptcha />\n    Vue.component('VueHcaptcha', VueHcaptcha);\n}\n\n// Create module definition for Vue.use()\nconst plugin = {\n    install\n};\n\n// Auto-install when vue is found (eg. in browser via <script> tag)\nlet GlobalVue = null;\nif (typeof window !== 'undefined') {\n    GlobalVue = window.Vue;\n} else if (typeof global !== 'undefined') {\n    GlobalVue = global.Vue;\n}\nif (GlobalVue) {\n    GlobalVue.use(plugin);\n}\n\n// To allow use as module (npm/webpack/etc.) export component\nexport default VueHcaptcha;\n"],"names":["resolveFn","rejectFn","promise","Promise","resolve","reject","config","window","hcaptcha","document","getElementById","scriptSrc","apiEndpoint","addQueryParamIfDefined","reCaptchaCompat","language","sentry","endpoint","assethost","imghost","reportapi","getScriptSrc","script","createElement","id","src","async","defer","onerror","event","error","head","appendChild","url","queryName","queryValue","link","includes","encodeURIComponent","sfc","props","key","val","defineComponent","name","sitekey","type","String","required","theme","default","size","tabindex","Boolean","challengeContainer","rqdata","data","widgetId","mounted","loadApiEndpointIfNotAlready","this","$props","then","onApiLoaded","catch","onError","unmounted","reset","remove","methods","opt","callback","onVerify","onExpired","onChallengeExpired","onOpen","onClose","render","$el","setData","onRendered","execute","onExecuted","$on","onReset","$emit","e","token","getResponse","eKey","getRespKey","$data","Vue","install","installed","component","VueHcaptcha","plugin","GlobalVue","global","use"],"mappings":"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"}